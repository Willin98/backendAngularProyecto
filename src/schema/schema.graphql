"Definiciones de los tipos de raiz"
type Query{
    "Lista de usuarios registrados en la Base de datos (Clientes / Admins)"
    users: ResultUsers
    "Para iniciar sesion de usuario"
    login(email: String!, password: String!): ResultLogin
    "Autenticarnos mediante token"
    me: ResultUser
}

type Mutation {
    register(user: UserInput!): ResultUser
}

"Interface para especificar las propiedad obligatorias en las respuestas"
interface Result{
    "Estado de la operacion"
    status: Boolean!
    "Mensaje de la operacion"
    message: String!
}

type ResultUsers implements Result{
    "Estado de la operacion"
    status: Boolean!
    "Mensaje de la operacion"
    message: String!
    "Lista de usuarios registrados en la Base de datos (Clientes / Admins)"
    users: [User!]! 
}

type ResultUser implements Result{
    "Estado de la operacion"
    status: Boolean!
    "Mensaje de la operacion"
    message: String!
    "Informacion del usuario"
    user: User
}

type ResultLogin implements Result{
    "Estado de la operacion"
    status: Boolean!
    "Mensaje de la operacion"
    message: String!
    "Informacion del token usuario logueado"
    token: String
}

"""
Vamos a especificar la informacion detallada del usuario
* Vamos a tener en cuenta:
* email= usuario del cliente de la base de datos.
* Fecha de nacimiento y registro en formato ISO
"""
type User{
    "Identificador unico"
    id: ID!
    "Nombre de pila"
    name: String!
    "Apellido"
    lastname: String!
    "Email del usuario"
    email: String!
    "Contraseña"
    password: String!
    "Fecha de registro"
    registerDate: String!
    "Fecha de Nacimiento"
    birthday: String!
    "Permisos del usuario"
    role: Role!
}

"Input para añadir los datos del usuario en el registro"
input UserInput{
    "Identificador no obligatorio"
    id: ID
    "Nombre de pila"
    name: String!
    "Apellido"
    lastname: String!
    "Email del usuario"
    email: String!
    "Contraseña"
    password: String!
    "Fecha de Nacimiento"
    birthday: String!
    "Permisos del usuario"
    role: Role=CLIENT
}

"Tipos de usuario que tenemos - Permisos"
enum Role {
    CLIENT 
    ADMIN
}